// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator zod {
  provider         = "zod-prisma-types"
  output           = "../../types/generated"
  createInputTypes = false // default is true
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String         @unique
  password     String
  username     String         @unique
  profileImage String?
  collection   Comic[]
  History      History[]
  Transaction  Transaction[]
  Transactions Transactions[]
}

model Comic {
  id     String @id @unique
  User   User?  @relation(fields: [userId], references: [id])
  userId Int?
}

enum TradeType {
  EXCHANGE
  BUY
  SELL
}

model HistoryItem {
  tradeType     TradeType
  comidId       String    @unique
  History       History?  @relation(fields: [historyUserId], references: [userId])
  historyUserId Int?
}

model History {
  user   User          @relation(fields: [userId], references: [id])
  userId Int           @id @unique
  items  HistoryItem[]
}

model Transaction {
  id             String        @id @unique
  user           User          @relation(fields: [userId], references: [id])
  userId         Int
  accepted       Boolean
  type           TradeType
  Transactions   Transactions? @relation(fields: [transactionsId], references: [id])
  transactionsId String?
}

model Transactions {
  user   User          @relation(fields: [userId], references: [id])
  id     String        @id @unique
  items  Transaction[]
  userId Int
}
